#include "params.fc";

cell pack_jetton_wallet_data(int locked, int balance, slice owner_address, slice jetton_master_address, cell jetton_wallet_code) inline {
    return begin_cell()
        .store_uint(locked, 1)
        .store_coins(balance)
        .store_slice(owner_address)
        .store_slice(jetton_master_address)
        .store_ref(jetton_wallet_code)
    .end_cell();
}

cell calculate_jetton_wallet_state_init(slice owner_address, slice jetton_master_address, cell jetton_wallet_code) inline {
    return begin_cell()
        .store_uint(0, 2)
        .store_maybe_ref(jetton_wallet_code)
        .store_maybe_ref(
            pack_jetton_wallet_data(1, 0, owner_address, jetton_master_address, jetton_wallet_code)
        )
        .store_uint(0, 1)
    .end_cell();
}

slice calc_jetton_wallet_address(cell state_init) inline {
    return begin_cell()
        .store_uint(4, 3)
        .store_int(0, 8)
        .store_uint(cell_hash(state_init), 256)
    .end_cell().begin_parse();
}

slice calculate_jetton_wallet_address(slice owner_address, slice jetton_master_address, cell jetton_wallet_code) inline {
    return calc_jetton_wallet_address(calculate_jetton_wallet_state_init(owner_address, jetton_master_address, jetton_wallet_code));
}